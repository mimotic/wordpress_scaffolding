# Block xmlrpc.php requests
location ~* ^/xmlrpc.php$ {
  deny all;
  access_log off;
  log_not_found off;
  return 444;
}

# nginx block wp-cron.php requests
location ~* ^/wp-cron.php$ {
    deny all;
    access_log off;
    log_not_found off;
    return 444;
}

# prevent be sacanned by wp scan
if ($http_user_agent ~* (wpscan|libwww-perl)) {
    return 403;
}

# nginx block wp-links-opml.php requests
location = /wp-links-opml.php {
    deny all;
    access_log off;
    log_not_found off;
    return 444;
}

# nginx block wp-config-sample.php requests
location = /wp-config-sample.php {
    deny all;
    access_log off;
    log_not_found off;
    return 444;
}

# Deniega el acceso a cualquier archivo PHP en los directorios "wp-content" y "wp-includes"
# y devuelve un error HTTP 403.
location ~* ^/(?:wp-content|wp-includes)/.*\.php$ {
    deny all;
}

# Deniega el acceso a cualquier archivo HTML, PHP, JS o SWF
# en el directorio "wp-content/uploads" y devuelve un error HTTP 403.
location ~* ^/wp-content/uploads/.*\.(?:s?html?|php|js|swf)$ {
    deny all;
}

# Deniega el acceso a cualquier archivo ZIP, GZ, TAR, BZIP2 o 7Z
# en el directorio "wp-content" y devuelve un error HTTP 403.
location ~* /(wp-content)/(.*?)\.(zip|gz|tar|bzip2|7z)\$ {
    deny all;
}

# Deniega el acceso a los archivos "wp-config.php", "readme.html", "license.txt" y "nginx.conf"
# y devuelve un error HTTP 403.
location ~* /(wp-config.php|readme.html|license.txt|nginx.conf) {
   deny all;
}

# block access to install.php
location ^~ /wp-admin/install.php {
  deny all;
  error_page 403 =404 / ;
}

# block access to upgrade.php
location ^~ /wp-admin/upgrade.php {
    deny all;
    error_page 403 =404 / ;
}

# nginx block wpscann on plugins folder
location ~* ^/wp-content/plugins/.+\.(txt|log|md)$ {
    deny all;
    error_page 403 =404 / ;
}

# Stop scann for the follow files on themes folder
location ~* ^/wp-content/themes/.+\.(txt|log|md)$ {
    deny all;
    error_page 403 =404 / ;
}

#Direct PHP File Access
#If somehow, a hacker successfully sneaks in a PHP file onto your site,
#theyâ€™ll be able to run this file by loading file which effectively becomes a backdoor to infiltrate your site.
#We should disable direct access to any PHP files by adding the following rules:
location ~* /(?:uploads|files|wp-content|wp-includes|akismet)/.*.php$ {
    deny all;
    access_log off;
    log_not_found off;
}

# other common nginx configuration to block sql injection and other attacks
location ~* "(eval\()" {
    deny all;
}
location ~* "(127\.0\.0\.1)" {
    deny all;
}
location ~* "([a-z0-9]{2000})" {
    deny all;
}
location ~* "(javascript\:)(.*)(\;)" {
    deny all;
}
location ~* "(base64_encode)(.*)(\()" {
    deny all;
}
location ~* "(GLOBALS|REQUEST)(=|\[|%)" {
    deny all;
}
location ~* "(<|%3C).*script.*(>|%3)" {
    deny all;
}
location ~ "(\\|\.\.\.|\.\./|~|`|<|>|\|)" {
    deny all;
}
location ~* "(boot\.ini|etc/passwd|self/environ)" {
    deny all;
}
location ~* "(thumbs?(_editor|open)?|tim(thumb)?)\.php" {
    deny all;
}
location ~* "(\'|\")(.*)(drop|insert|md5|select|union)" {
    deny all;
}
location ~* "(https?|ftp|php):/" {
    deny all;
}
location ~* "(=\\\'|=\\%27|/\\\'/?)\." {
    deny all;
}
location ~ "(\{0\}|\(/\(|\.\.\.|\+\+\+|\\\"\\\")" {
    deny all;
}
location ~ "(~|`|<|>|:|;|%|\\|\s|\{|\}|\[|\]|\|)" {
    deny all;
}
location ~* "/(=|\$&|_mm|(wp-)?config\.|cgi-|etc/passwd|muieblack)" {
    deny all;
}

location ~* "(&pws=0|_vti_|\(null\)|\{\$itemURL\}|echo(.*)kae|etc/passwd|eval\(|self/environ)" {
    deny all;
}
location ~* "/(^$|mobiquo|phpinfo|shell|sqlpatch|thumb|thumb_editor|thumbopen|timthumb|webshell|config|settings|configuration)\.php" {
    deny all;
}
